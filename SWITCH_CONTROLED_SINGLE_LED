#include "stm32f10x.h"

#define LED1_GPIO_PORT GPIOC
#define LED1_GPIO_CLK RCC_APB2Periph_GPIOC
#define LED1_GPIO_PIN GPIO_Pin_13

#define LED2_GPIO_PORT GPIOC
#define LED2_GPIO_CLK RCC_APB2Periph_GPIOC
#define LED2_GPIO_PIN GPIO_Pin_14

#define LED3_GPIO_PORT GPIOC
#define LED3_GPIO_CLK RCC_APB2Periph_GPIOC
#define LED3_GPIO_PIN GPIO_Pin_15

#define LED1_ON GPIO_ResetBits(GPIOC,LED1_GPIO_PIN)
#define LED2_ON GPIO_ResetBits(GPIOC,LED2_GPIO_PIN)
#define LED3_ON GPIO_ResetBits(GPIOC,LED3_GPIO_PIN)

#define LED1_OFF GPIO_SetBits(GPIOC,LED1_GPIO_PIN)
#define LED2_OFF GPIO_SetBits(GPIOC,LED2_GPIO_PIN)
#define LED3_OFF GPIO_SetBits(GPIOC,LED3_GPIO_PIN)

#define KEY1_GPIO_PORT GPIOC
#define KEY1_GPIO_CLK RCC_APB2Periph_GPIOC
#define KEY1_GPIO_PIN GPIO_Pin_8

#define KEY2_GPIO_PORT GPIOC
#define KEY2_GPIO_CLK RCC_APB2Periph_GPIOC
#define KEY2_GPIO_PIN GPIO_Pin_9

#define KEY_ON 1
#define KEY_OFF 0

void LED_GPIO_Config(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_APB2PeriphClockCmd(KEY1_GPIO_CLK|KEY2_GPIO_CLK,ENABLE);

	GPIO_InitStructure.GPIO_Pin = KEY1_GPIO_PIN;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(KEY1_GPIO_PORT, &GPIO_InitStructure);
	
	GPIO_InitStructure.GPIO_Pin = KEY2_GPIO_PIN;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
	GPIO_Init(KEY2_GPIO_PORT, &GPIO_InitStructure);
	
}

void KEY_GPIO_Config(void)
{
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_APB2PeriphClockCmd(LED1_GPIO_CLK|LED2_GPIO_CLK|LED3_GPIO_CLK,ENABLE);

	GPIO_InitStructure.GPIO_Pin = LED1_GPIO_PIN;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(LED1_GPIO_PORT, &GPIO_InitStructure);
	GPIO_SetBits(LED1_GPIO_PORT,LED1_GPIO_PIN);
	
	GPIO_InitStructure.GPIO_Pin = LED2_GPIO_PIN;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(LED2_GPIO_PORT, &GPIO_InitStructure);
	GPIO_SetBits(LED2_GPIO_PORT,LED2_GPIO_PIN);
	
	GPIO_InitStructure.GPIO_Pin = LED3_GPIO_PIN;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_Init(LED3_GPIO_PORT, &GPIO_InitStructure);
	GPIO_SetBits(LED3_GPIO_PORT,LED3_GPIO_PIN);
	
}

void delay_nms(uint16_t time) //72MHZ
{
	uint16_t i=0;
	while(time--)
	{
		i=12000;
		while(i--);
	}
}

uint8_t KEY_DETECT(GPIO_TypeDef* GPIOx,uint16_t GPIO_Pin)
{
	//Because the both ends of the switch already exist a capacity which is capable of eliminating the shake of the key generated by the user,
	//there is no need to compile a software-shake-elimnating function in the programme. Please refer to my additional code attatched to this programme
	//in this file if you are interesred.
	if(GPIO_ReadInputDataBit(GPIOx,GPIO_Pin) == KEY_ON)
	{
		while(GPIO_ReadInputDataBit(GPIOx,GPIO_Pin) == KEY_ON);
		return KEY_ON;
	}
	else
		return KEY_OFF;
}


int main()
{
	SystemInit();
	LED_GPIO_Config();
	KEY_GPIO_Config();
	
	while(1)
	{
		if(KEY_DETECT(KEY1_GPIO_PORT,KEY1_GPIO_PIN) == KEY_ON)
			LED1_ON;
		
		if(KEY_DETECT(KEY2_GPIO_PORT,KEY2_GPIO_PIN) == KEY_ON)
			LED1_OFF;
		
	}
}

